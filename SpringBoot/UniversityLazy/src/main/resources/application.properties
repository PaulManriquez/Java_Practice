spring.application.name=UniversityLazy


spring.datasource.url=jdbc:mysql://localhost:3306/uni_lazy
spring.datasource.username=root
spring.datasource.password=password
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.jpa.hibernate.ddl-auto=none


# Show the SQL statements
spring.jpa.show-sql=true

# Format SQL nicely (optional, improves readability)
spring.jpa.properties.hibernate.format_sql=true

# Log the SQL parameters (IMPORTANT for seeing actual values)
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE


#/*
#* Hibernate DDL Auto Configuration Options:
#* -----------------------------------------
#*
#* spring.jpa.hibernate.ddl-auto = none
#*    --> Do nothing. No schema changes are made to the database.
#*
#* spring.jpa.hibernate.ddl-auto = validate
#*    --> Validate that the schema matches the entities.
#*        If differences are found, an error is thrown.
#*
#* spring.jpa.hibernate.ddl-auto = update
#*    --> Update the database schema to match the entity models.
#*        Does not drop data. Good for development.
#*
#* spring.jpa.hibernate.ddl-auto = create
#*    --> Drops and recreates the schema on each application start.
#*        WARNING: All existing data will be lost.
#*
#* spring.jpa.hibernate.ddl-auto = create-drop
#*    --> Same as 'create', but also drops the schema when the app stops.
#*        WARNING: Useful only for testing.
#*
#* spring.jpa.hibernate.ddl-auto = drop (rare)
#*    --> Drops the existing schema without recreating it.
#*        Use with caution ? rarely needed.
#*
#* Recommended:
#*  - 'update' for development
#*  - 'validate' or 'none' for production
#*/
